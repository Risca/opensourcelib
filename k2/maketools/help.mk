
.PHONY: help
help:
	@echo
	@echo "Usage make <target> <args> -jN"
	@echo ""
	@echo " Environment:"
	@echo ""
	@echo "  venv             Create virtualenv and install all dependencies"
	@echo "                   Run 'source activate' to enable the environment"
	@echo " Utilities:"
	@echo ""
	@echo "  format           Automatically format all K2 Python source code"
	@echo ""
	@echo " Testing locally:"
	@echo "  check            Run all tests in the local environment"
	@echo "  test             Run all unit tests"
	@echo "  static           Run static analysis"
	@echo "  systest          Run all applicable system tests"
	@echo ""
	@echo " Set the COVERAGE variable to 'y' to get a code coverage report."
	@echo " For example: make COVERAGE=y check"
	@echo ""
	@echo " To minimize the number of system tests to run, the FEATURE_SYSTESTS"
	@echo " variable can be set to the test files you want to run. For example:"
	@echo " make FEATURE_SYSTESTS=systest/feature/powermeter.py systest_local"
	@echo ""
	@echo " Testing in target environment:"
	@echo "  test_<env>       Run all unit tests"
	@echo "  static_<env>     Run static analysis"
	@echo "  systest_<env>    Run all applicable system tests"
	@echo "  debtest_<env>    Build and test Debian packages in Docker containers"
	@echo ""
	@echo " Replace <env> in the above targets with one of the following:"
	@echo "   - all           Run in all applicable environments"
	@echo "   - 14            Run in a Ubuntu 14.04 Docker container"
	@echo "   - 16            Run in a Ubuntu 16.04 Docker container"
	@echo ""
	@echo " Example, running the system tests in the Ubuntu 16.04 environment:"
	@echo "   make systest_16"
	@echo ""
	@echo " Debugging docker build and test:"
	@echo "  docker_debug_<env>   Start a shell inside a docker container"
	@echo ""
	@echo " Replace <env> in the above targets with one of the following:"
	@echo "   - 14                Run in a Ubuntu 14.04 test container"
	@echo "   - 16                Run in a Ubuntu 16.04 test container"
	@echo "   - 14_deb_builder    Run in a Ubuntu 14.04 build container"
	@echo "   - 16_deb_builder    Run in a Ubuntu 16.04 build container"
	@echo ""
	@echo " Documentation:"
	@echo ""
	@echo "  doc              Generate all documentation in all formats"
	@echo "                   Requires pdflatex installed"
	@echo "  html             Generate all documentation as HTML"
	@echo "  user_guide       Generate user guide in all formats"
	@echo "                   Requires pdflatex installed"
	@echo "  user_guide_html  Generate user guide as HTML"
	@echo "  user_guide_pdf   Generate user guide as PDF"
	@echo "                   Requires pdflatex installed"
	@echo "  dev_guide        Generate dev guide in all formats"
	@echo "                   Requires pdflatex installed"
	@echo "  dev_guide_html   Generate dev guide as HTML"
	@echo "  dev_guide_pdf    Generate dev guide in as PDF"
	@echo "                   Requires pdflatex installed"
	@echo ""
	@echo " Packaging:"
	@echo ""
	@echo "  package          Build and test Debian packages and documentation"
	@echo ""
	@echo " Clean:"
	@echo ""
	@echo "  clean            Cleans all temporary files and build output"
	@echo "  cleanup          Cleans all temporary files and build output"
	@echo "                   removes venvs and marks containers for rebuilding"
	@echo "  cleanvenv        Removes all venvs"
	@echo ""
	@echo " If you find that a high level target is taking too long to build,"
	@echo " try using the -j flag to run targets in parallel."
	@echo ""
